doctype html
html(lang='en')
head 
  meta(charset="utf-8")
  title Callbox
  //- link(href="./styles/style.css", rel="stylesheet")
  style(type='text/css').
    body {
      font-family:
        system-ui,
        -apple-system, /* Firefox supports this but not yet `system-ui` */
        'Segoe UI',
        Roboto,
        Helvetica,
        Arial,
        sans-serif,
        'Apple Color Emoji',
        'Segoe UI Emoji';
      display: flex;
      width: 100%;
      justify-content: center;
      flex-direction: column;
    }

    h1 {
      text-align: center;
    }

    div.requests {
      margin-bottom: 1rem;
      width: 40rem;
      margin-left: auto;
      margin-right: auto;
    }

    div.request {
      border-radius: 0.25rem;
      width: 40rem;
      padding: 1rem;
      --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    }
body
  h1 Requests
  .requests
    each req in requests 
      .request
        h2 Request
        p Method: #{req.data.method}
        p Host:  #{req.data.host}
        p Date: #{req.created_at}
        p Body: #{JSON.stringify(req.data.body)}
        p Headers:
        ul
          each val, key in req.data
            li= key + ': ' + JSON.stringify(val)

  script(src='/socket.io/socket.io.js')
  script.
    const socket = io();
    const requestsDiv = document.querySelector('.requests');

    const addRequest = (parent, name, value) => {
      const elem = document.createElement('p');
      elem.textContent = name + ': ' + value;
      parent.prepend(elem);
    }

    socket.on('new request', (req) => {
      const newRequest = document.createElement('div');

      const ul = document.createElement('ul');
      for (const [key, value] of Object.entries(req.data)) {
        const li = document.createElement('li');
        li.textContent = `${key}: ${value}`;
        ul.prepend(li);
      }
      newRequest.prepend(ul);

      addRequest(newRequest, 'Headers', '');
      addRequest(newRequest, 'Body', JSON.stringify(req.data.body))
      addRequest(newRequest, 'Date', req.created_at);
      addRequest(newRequest, 'Host', req.data.host);
      addRequest(newRequest, 'Method', req.data.method);

      const h2 = document.createElement('h2');
      h2.textContent = 'Request';
      newRequest.prepend(h2);

      requestsDiv.prepend(newRequest);
    });