doctype html

html(lang='en')
head 
  title Rox
body 
  h1 Requests
  .requests
  each req in requests 
    h2 Request
    p Method: #{req.data.method}
    p Host:  #{req.data.host}
    p Date: #{req.created_at}
    p Body: #{JSON.stringify(req.data.body)}
    p Headers:
    ul
      each val, key in req.data
        li= key + ': ' + JSON.stringify(val)

  script(src='/socket.io/socket.io.js')
  script(src='https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js')
  script.
    const socket = io();
    const requestsDiv = document.querySelector('.requests');

    socket.on('new request', (req) => {
      console.log(req)
      const newRequest = document.createElement('div');

      const ul = document.createElement('ul');
      for (const [key, value] of Object.entries(req.data)) {
        const li = document.createElement('li');
        li.textContent = `${key}: ${value}`;
        ul.prepend(li);
      }
      newRequest.prepend(ul);
      const headers = document.createElement('p');
      headers.textContent = 'Headers:';
      newRequest.prepend(headers);
      const body = document.createElement('p');
      body.textContent = 'Body: ' + JSON.stringify(req.data.body);
      newRequest.prepend(body);
      const date = document.createElement('p');
      date.textContent = 'Date: ' + req.created_at;
      newRequest.prepend(date);
      const host = document.createElement('p');
      host.textContent = 'Host: ' + req.data.host;
      newRequest.prepend(host);
      const method = document.createElement('p');
      method.textContent = 'Method: ' + req.data.method;
      newRequest.prepend(method);
      const h2 = document.createElement('h2');
      h2.textContent = 'Request';
      newRequest.prepend(h2);
      requestsDiv.prepend(newRequest);
    });